#==========[ Schema ]===================================================================================================

swagger: "2.0"
info:
  version: 2.0.0
  title: Casper Object Storage
  description: The Casper 2.0 API for Object Storage
  contact:
    name: Casper Object Storage Team
    url: https://confluence.aka.lgl.grungy.us/display/CASPER/Integrating+With+Casper
    email: opc_casper_users_us_grp@oracle.com
  license:
    name: Oracle Corporation
host: localhost:9000
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

#==========[ Paths ]====================================================================================================

# Document all of the error statuses (and error names?)
# Consider using 404 for authz.
# Include content-* headers for all responses and requests that use them?
paths:

#----------[ Namespace Collection ]-----------------------------------------------------------------------------------

  /n/:

    get:
      tags:
        - objectStorage
      summary: GetNamespace
      description: |
        Get the name of the namespace for the user making the request. An account name must be unique, must start with a
        letter, and can have up to 15 lower case letters and numbers. You cannot use spaces and special characters.
      operationId: GetNamespace
      parameters:
        - $ref: '#/parameters/ClientRequestIdHeader'
      responses:
        200:
          description: The name of the users namespace.
          schema:
            type: string
            pattern: '[A-Za-z][A-Za-z0-9\\-_\\.]+'
          headers:
            content-type:
              type: string
              default: text/plain
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        401:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

  #----------[ Bucket Collection ]--------------------------------------------------------------------------------------

  /n/{namespaceName}/b/:

    get:
      tags:
        - objectStorage
      summary: ListBuckets
      description: |
        Get a list of all the buckets in a namespace.
      operationId: ListBuckets
      parameters:
        - $ref: '#/parameters/NamespacePathParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/ClientRequestIdHeader'
      responses:
        200:
          description: A page of `Bucket` objects.
          schema:
            type: array
            items:
              $ref: '#/definitions/Bucket'
          headers:
            opc-client-request-id:
              type: string
              description: returns the same values as the request header, for use by clients when debugging.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            opc-next-page:
              type: string
              description: |
                A token used for paginating through the list of `Buckets`. If this header appears in the response there
                are additional Buckets that can be fetched. Include this value as the `page` parameter in a subsequent
                GET request.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        401:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    # TODO: document the max size of the JSON, and the max size of the user-defined metadata field?
    post:
      tags:
        - objectStorage
      summary: CreateBucket
      description: |
        Create a bucket in the given namespace with a bucket name and optional user-defined metadata.
      operationId: CreateBucket
      parameters:
        - $ref: '#/parameters/NamespacePathParam'
        - $ref: '#/parameters/ClientRequestIdHeader'
        - name: CreateBucketDetails
          description: Request object for creating a bucket.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateBucketDetails'
      responses:
        200:
          description: The full bucket representation, including fields set by the server.
          schema:
            $ref: '#/definitions/Bucket'
          headers:
            opc-client-request-id:
              type: string
              description: returns the same values as the request header, for use by clients when debugging.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            ETag:
              description: The entity tag for the bucket that was created.
              type: string
            Location:
              description: The full path to the bucket that was created.
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        401:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        409:
          description: Conflict
          schema:
            $ref: '#/responses/Error'
        411:
          description: Content-Length Required
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

  #----------[ Bucket ]-------------------------------------------------------------------------------------------------

  /n/{namespaceName}/b/{bucketName}/:

    get:
      tags:
        - objectStorage
      summary: GetBucket
      description: |
        Get the current representation of the given bucket in the given namespace.
      operationId: GetBucket
      parameters:
        - $ref: '#/parameters/NamespacePathParam'
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfNoneMatchHeader'
        - $ref: '#/parameters/ClientRequestIdHeader'
      responses:
        200:
          description: A bucket representation for the requested bucket.
          schema:
            $ref: '#/definitions/Bucket'
          headers:
            opc-client-request-id:
              type: string
              description: returns the same values as the request header, for use by clients when debugging.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            ETag:
              type: string
              description: The current entity tag for the bucket.
        304:
          description: Not Modified
          headers:
            opc-client-request-id:
              type: string
              description: returns the same values as the request header, for use by clients when debugging.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            ETag:
              type: string
              description: The current entity tag for the bucket.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        401:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    post:
      tags:
        - objectStorage
      summary: UpdateBucket
      description: |
        Perform a partial (or full) update of a bucket, currently including just the user-defined metadata.
      operationId: UpdateBucket
      parameters:
        - $ref: '#/parameters/NamespacePathParam'
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/ClientRequestIdHeader'
        - name: UpdateBucketDetails
          description: Request object for updating a bucket.
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateBucketDetails'
      responses:
        200:
          description: The full representation of the bucket, including fields set by the server.
          schema:
            $ref: '#/definitions/Bucket'
          headers:
            opc-client-request-id:
              type: string
              description: returns the same values as the request header, for use by clients when debugging.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            ETag:
              type: string
              description: The entity tag for the updated bucket.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        401:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    delete:
      tags:
        - objectStorage
      summary: DeleteBucket
      description: |
        Delete a bucket if it is already empty.
      operationId: DeleteBucket
      parameters:
        - $ref: '#/parameters/NamespacePathParam'
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/ClientRequestIdHeader'
      responses:
        200:
          description: The response body is always empty.
          headers:
            opc-client-request-id:
              type: string
              description: returns the same values as the request header, for use by clients when debugging.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        401:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        409:
          description: Conflict
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

  #----------[ Object Collection ]--------------------------------------------------------------------------------------

  /n/{namespaceName}/b/{bucketName}/o:

    get:
      tags:
        - objectStorage
      summary: ListObjects
      description: |
        List the objects in a bucket.
      operationId: ListObjects
      parameters:
        - $ref: '#/parameters/NamespacePathParam'
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/PrefixQueryParam'
        - $ref: '#/parameters/StartWithQueryParam'
        - $ref: '#/parameters/EndBeforeQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/DelimiterQueryParam'
        - $ref: '#/parameters/FieldsQueryParam'
        - $ref: '#/parameters/ClientRequestIdHeader'
      responses:
        200:
          description: List objects response containing list of object summaries, optionally, prefixes, and optionally name of the object to start next page in a truncated response.
          schema:
            $ref: '#/definitions/ListObjects'
          headers:
            opc-client-request-id:
              type: string
              description: returns the same values as the request header, for use by clients when debugging.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        401:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

  #----------[ Object ]-------------------------------------------------------------------------------------------------

  /n/{namespaceName}/b/{bucketName}/o/{objectName}:

    get:
      tags:
        - objectStorage
      summary: GetObject
      description: |
        Get the metadata and body of an object.
      operationId: GetObject
      parameters:
        - $ref: '#/parameters/NamespacePathParam'
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/ObjectPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfNoneMatchHeader'
        - $ref: '#/parameters/ClientRequestIdHeader'
      responses:
        200:
          description: The object metadata and bytes.
          schema:
            type: string
            format: binary
          headers:
            opc-client-request-id:
              type: string
              description: returns the same values as the request header, for use by clients when debugging.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            ETag:
              type: string
              description: The entity tag for the object.
            opc-meta-*:
              type: string
              description: The user-defined metadata for the object.
        304:
          description: Not Modified
          opc-client-request-id:
            type: string
            description: returns the same values as the request header, for use by clients when debugging.
          opc-request-id:
            type: string
            description: |
              Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
              request, please provide this request ID.
          ETag:
            type: string
            description: The entity tag for the object.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        401:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    head:
      tags:
        - objectStorage
      summary: HeadObject
      description: |
        Get the user-defined metadata and entity tag for an object.
      operationId: HeadObject
      parameters:
        - $ref: '#/parameters/NamespacePathParam'
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/ObjectPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfNoneMatchHeader'
        - $ref: '#/parameters/ClientRequestIdHeader'
      responses:
        200:
          description: The object metadata and bytes.
          headers:
            opc-client-request-id:
              type: string
              description: returns the same values as the request header, for use by clients when debugging.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            ETag:
              type: string
              description: The entity tag for the object.
            opc-meta-*:
              type: string
              description: The user-defined metadata for the object.
        304:
          description: Not Modified
          opc-client-request-id:
            type: string
            description: returns the same values as the request header, for use by clients when debugging.
          opc-request-id:
            type: string
            description: |
              Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
              request, please provide this request ID.
          ETag:
            type: string
            description: The entity tag for the object.
        400:
          description: Bad Request
        401:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error

    # Note details of authentication, which differ from other writes?
    put:
      tags:
        - objectStorage
      summary: PutObject
      description: |
        Create a new object or overwrite an existing one.
      operationId: PutObject
      parameters:
        - $ref: '#/parameters/NamespacePathParam'
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/ObjectPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        # TODO: how to document that we only allow "*" for If-None-Match here.
        - $ref: '#/parameters/IfNoneMatchHeader'
        - $ref: '#/parameters/ClientRequestIdHeader'
        - $ref: '#/parameters/Expect100ContinueHeader'
        - $ref: '#/parameters/RequiredContentLengthHeader'
        - $ref: '#/parameters/OptionalContentMD5Header'
        - $ref: '#/parameters/OpcMetaHeader'
        - name: PutObjectBody
          description: The object being put to the object store.
          required: true
          in: body
          schema:
            type: string
            format: binary
      responses:
        200:
          description: The object was successfully created.
          headers:
            opc-client-request-id:
              type: string
              description: returns the same values as the request header, for use by clients when debugging.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            opc-content-md5:
              type: string
              description: The base-64 encoded MD5 hash of the request body as computed by the server.
            ETag:
              type: string
              description: The entity tag for the object.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        401:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    delete:
      tags:
        - objectStorage
      summary: DeleteObject
      description: |
        Delete an object.
      operationId: DeleteObject
      parameters:
        - $ref: '#/parameters/NamespacePathParam'
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/ObjectPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/ClientRequestIdHeader'
      responses:
        200:
          description: The object was successfully deleted.
          headers:
            opc-client-request-id:
              type: string
              description: returns the same values as the request header, for use by clients when debugging.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        401:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

#==========[ Definitions ]==============================================================================================

definitions:
  Bucket:
    required:
      - namespace
      - name
      - compartmentId
      - createdBy
      - createdOn
      - metadata
      - etag
    properties:
      namespace:
        type: string
        description: the namespace in which the bucket lives.
      name:
        type: string
        description: The name of the bucket.
      compartment:
        type: string
        description: the compartment in which the bucket is authorized.
      metadata:
        additionalProperties:
          type: string
        type: object
        description: Arbitrary string keys and values for the user-defined metadata.
      createdBy:
        type: string
        description: the OCID of the user who created the bucket.
      createdOn:
        type: string
        # What is date-time? What are we currently sending?
        format: date-time
        description: The date and time at which the bucket was created.
      etag:
        type: string
        description: The entity tag for the bucket.
  # TODO: document the max size of this object, and the max size of the metadata field (these are separate).
  CreateBucketDetails:
    required:
      - name
      - compartmentId
    properties:
      namespace:
        type: string
        description: The namespace in which the bucket lives.
      name:
        type: string
        description: The name of the bucket.
      compartmentId:
        type: string
        description: The compartment ID used to authorize the bucket.
      metadata:
        additionalProperties:
          type: string
        type: object
        description: Arbitrary string keys and values for the user-defined metadata.
  # TODO: document the max size of this object, and the max size of the metadata field (these are separate).
  UpdateBucketDetails:
    properties:
      namespace:
        type: string
        description: The namespace in which the bucket lives.
      name:
        type: string
        description: The name of the bucket.
      metadata:
        additionalProperties:
          type: string
        type: object
        description: Arbitrary string keys and values for the user-defined metadata.
  ListObjects:
    required:
      - objects
    properties:
      objects:
        type: array
        items:
          $ref: "#/definitions/ObjectSummary"
      prefixes:
        type: array
        items:
          type: string
      nextStartWith:
        type: string
        description: The name of the object to be used in startWith parameter to obtain next page of
                      a truncated list objects response.
  ObjectSummary:
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the object.
      size:
        type: integer
        format: int64
        description: Size of the object in bytes.
      md5:
        type: string
        description: Base64 encoded MD5 hash of the object data.
      created:
        type: string
        description: Date and time of object creation.
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: string
        description: A short error code that defines the error, meant for programmatic parsing.
      message:
        type: string
        description: A human-readable error string.

#==========[ Parameters ]===============================================================================================

parameters:
  NamespacePathParam:
    name: namespaceName
    in: path
    required: true
    type: string
    pattern: '[A-Za-z][A-Za-z0-9\\-_\\.]+'
    description: The top-level namespace used for the request.
  BucketPathParam:
    name: bucketName
    in: path
    required: true
    type: string
    pattern: '[A-Za-z0-9\\-_\\.]+'
    description: The name of the bucket.
  ObjectPathParam:
    name: objectName
    in: path
    required: true
    type: string
    pattern: '[^\\r\\n\\00#\\?]+'
    description: The name of the object.
  PaginationLimitQueryParam:
    name: limit
    in: query
    type: integer
    minimum: 1
    maximum: 1000
    description: The maximum number of items to return.
  PaginationTokenQueryParam:
    name: page
    in: query
    type: string
    minLength: 1
    maxLength: 1024
    description: The page at which to start retrieving results.
  PrefixQueryParam:
    name: prefix
    in: query
    type: string
    description: Object names returned by a list query must start with prefix
  StartWithQueryParam:
    name: start
    in: query
    type: string
    description: Object names returned by a list query must be greater or equal to this parameter
  EndBeforeQueryParam:
    name: end
    in: query
    type: string
    description: Object names returned by a list query must be strictly less than this parameter
  DelimiterQueryParam:
    name: delimiter
    in: query
    type: string
    description: When this parameter is set to '/' character (other values not supported), only objects that
                 do not have it in name, after an optionally specified prefix, are returned.   For all other
                 scanned objects, part of their name up to the last occurence of the delimiter, after prefix,
                 is returned as a set of prefixes.
  FieldsQueryParam:
    name: fields
    in: query
    type: string
    description: Object summary in list of objects includes the 'name' field.   This parameter may be used to also include 'size'
                 (object size in bytes), 'md5', and 'created' (object creation date and time) fields.
                 Value of this parameter should be a comma separated, case-insensitive list of those field names.
                 For example 'name,created,md5'
  IfMatchHeader:
    name: if-match
    in: header
    type: string
    description: the entity tag to match.
  IfNoneMatchHeader:
    name: if-none-match
    in: header
    type: string
    description: the entity tag to avoid matching.
  ClientRequestIdHeader:
    name: opc-client-request-id
    in: header
    type: string
    description: client request ID for tracing
  Expect100ContinueHeader:
    name: Expect
    in: header
    type: string
    description: 100-continue
    default: 100-continue
  RequiredContentLengthHeader:
    name: Content-Length
    in: header
    type: integer
    format: int64
    description: The content type of the body.
    required: false
  OptionalContentMD5Header:
    name: Content-MD5
    in: header
    type: string
    description: The base-64 encoded MD5 hash of the body.
  OpcMetaHeader:
    name: opc-meta-*
    in: header
    type: string
    description: Optional user-defined metadata key and value.

#==========[ Responses ]================================================================================================

responses:
  Error:
    description: A description of an error that occurred.
    schema:
      $ref: '#/definitions/Error'
    headers:
      opc-client-request-id:
        type: string
        description: returns the same values as the request header, for use by clients when debugging.
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
          request, please provide this request ID.