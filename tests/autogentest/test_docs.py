# coding: utf-8
# Copyright (c) 2016, 2021, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

import oci
import os


def test_all_autogenerated_services_and_clients_present_in_docs():
    services_to_ignore = ["encryption"]     # Not autogenerated
    # Programmatically get all the clients by inspecting all of the modules in oci
    for x in dir(oci):
        # oci.version is a module and we want to find all the other modules
        instance_x = eval("oci.{}".format(x))

        # Every autogenerated service should have models directory
        if isinstance(instance_x, type(oci.version)) and hasattr(instance_x, 'models'):
            service_name = x
            if x in services_to_ignore:
                continue
            # Check if a directory for service exists
            # assert os.path.exists(os.path.expanduser("docs/api/{}".format(service_name)))
            assert os.path.exists("docs/api/{}".format(service_name))

            # Check clients docs
            for attribute in dir(instance_x):
                if "Client" in attribute:
                    # Check whether the corresponding doc is generated for this client
                    assert os.path.exists("docs/api/{}/client/oci.{}.{}.rst".format(service_name, service_name, attribute))

# TODO Checking for models fails in TC. This should be fixed.
            # Check models docs
            # for model_name in dir((instance_x).models):
            #     # Filter out internal attributes
            #     if "_" not in model_name:
            #         assert os.path.exists("docs/api/{}/models/oci.{}.models.{}.rst".format(service_name, service_name, model_name))
