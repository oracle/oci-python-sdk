<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.oracle.bmc.sdk</groupId>
    <artifactId>python-sdk</artifactId>
    <version>0.2.0-SNAPSHOT</version>
    <name>Public Python SDK</name>
    <properties>
        <spec-temp-dir>${project.build.directory}/swagger</spec-temp-dir>
        <preferred-temp-dir>${project.build.directory}/preferred</preferred-temp-dir>
        <preprocessed-temp-dir>${project.build.directory}/preprocessed</preprocessed-temp-dir>
        <core-spec-file>coreservices-api-spec-20160918-external.yaml</core-spec-file>
        <base-proto-file>base.proto.yaml</base-proto-file>
        <blockstorage-proto-file>blockstorage.proto.yaml</blockstorage-proto-file>
        <compute-proto-file>compute.proto.yaml</compute-proto-file>
        <vcn-proto-file>vcn.proto.yaml</vcn-proto-file>
        <identity-spec-file>identity-control-plane-api-spec-20160918.yaml</identity-spec-file>
        <casper-spec-file>casper-api.yaml</casper-spec-file>
        <oralb-spec-file>spec-20170115.yaml</oralb-spec-file>
        <dbaas-spec-file>dbaas-api-spec-20160918.yaml</dbaas-spec-file>
        <audit-spec-file>hemlock-api-20160918.yaml</audit-spec-file>
        <enabled-groups-file>${project.basedir}/release-sdk.txt</enabled-groups-file>
        <inceptionYear>2016</inceptionYear>
        <dns-spec-file>public-dns-api-spec.yaml</dns-spec-file>
        <file_storage-spec-file>fss-api-spec-20171215.yaml</file_storage-spec-file>
        <email-spec-file>email-api-spec.yaml</email-spec-file>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.oracle.pic.commons</groupId>
            <artifactId>coreservices-api-spec</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.pic.identity</groupId>
            <artifactId>identity-control-plane-api-spec</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.pic.casper</groupId>
            <artifactId>casper-api-spec</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.pic.lb</groupId>
            <artifactId>oralb-api-spec</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.pic.dbaas</groupId>
            <artifactId>dbaas-api-spec</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.pic.sherlock</groupId>
            <artifactId>hemlock-spec</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.pic.dns.pub</groupId>
            <artifactId>public-dns-api-spec</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.pic.ffsw</groupId>
            <artifactId>fss-api-spec</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.pic.email</groupId>
            <artifactId>email-api-spec</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <name>current.year</name>
                            <pattern>yyyy</pattern>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>unpack-coreservices</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.oracle.pic.commons</groupId>
                                    <artifactId>coreservices-api-spec</artifactId>
                                    <type>jar</type>
                                    <includes>**/*</includes>
                                    <outputDirectory>${spec-temp-dir}/core</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-identity</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.oracle.pic.identity</groupId>
                                    <artifactId>identity-control-plane-api-spec</artifactId>
                                    <type>jar</type>
                                    <includes>**/*</includes>
                                    <outputDirectory>${spec-temp-dir}/identity</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-casper</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.oracle.pic.casper</groupId>
                                    <artifactId>casper-api-spec</artifactId>
                                    <type>jar</type>
                                    <includes>**/*</includes>
                                    <outputDirectory>${spec-temp-dir}/casper</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-oralb</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.oracle.pic.lb</groupId>
                                    <artifactId>oralb-api-spec</artifactId>
                                    <type>jar</type>
                                    <includes>**/*</includes>
                                    <outputDirectory>${spec-temp-dir}/oralb</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-database</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.oracle.pic.dbaas</groupId>
                                    <artifactId>dbaas-api-spec</artifactId>
                                    <type>jar</type>
                                    <includes>**/*</includes>
                                    <outputDirectory>${spec-temp-dir}/dbaas</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-audit</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.oracle.pic.sherlock</groupId>
                                    <artifactId>hemlock-spec</artifactId>
                                    <type>jar</type>
                                    <includes>**/*</includes>
                                    <outputDirectory>${spec-temp-dir}/audit</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-dns</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.oracle.pic.dns.pub</groupId>
                                    <artifactId>public-dns-api-spec</artifactId>
                                    <type>jar</type>
                                    <includes>**/*</includes>
                                    <outputDirectory>${spec-temp-dir}/dns</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-file_storage</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.oracle.pic.ffsw</groupId>
                                    <artifactId>fss-api-spec</artifactId>
                                    <type>jar</type>
                                    <includes>**/*</includes>
                                    <outputDirectory>${spec-temp-dir}/file_storage</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-email</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.oracle.pic.email</groupId>
                                    <artifactId>email-api-spec</artifactId>
                                    <type>jar</type>
                                    <includes>**/*</includes>
                                    <outputDirectory>${spec-temp-dir}/email</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.oracle.oci.sdk.utilities</groupId>
                <artifactId>spec-conditionals-preprocessor-plugin</artifactId>
                <version>0.0.1-SNAPSHOT</version>
                <executions>
                    <execution>
                        <id>spec-conditionals-prefer-core-base</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prefer</goal>
                        </goals>
                        <configuration>
                            <inputFiles>
                                <inputFile>${spec-temp-dir}/core/source/${base-proto-file}</inputFile>
                                <inputFile>${spec-temp-dir}/core/20160918/${base-proto-file}</inputFile>
                            </inputFiles>
                            <outputFile>${preferred-temp-dir}/${base-proto-file}</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-preprocess-core-base</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>preprocess</goal>
                        </goals>
                        <configuration>
                            <inputFile>${preferred-temp-dir}/${base-proto-file}</inputFile>
                            <outputFile>${preprocessed-temp-dir}/core/${base-proto-file}</outputFile>
                            <groupFile>${enabled-groups-file}</groupFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-prefer-core-blockstorage</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prefer</goal>
                        </goals>
                        <configuration>
                            <inputFiles>
                                <inputFile>${spec-temp-dir}/core/source/${blockstorage-proto-file}</inputFile>
                                <inputFile>${spec-temp-dir}/core/20160918/${blockstorage-proto-file}</inputFile>
                            </inputFiles>
                            <outputFile>${preferred-temp-dir}/${blockstorage-proto-file}</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-preprocess-core-blockstorage</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>preprocess</goal>
                        </goals>
                        <configuration>
                            <inputFile>${preferred-temp-dir}/${blockstorage-proto-file}</inputFile>
                            <outputFile>${preprocessed-temp-dir}/core/${blockstorage-proto-file}</outputFile>
                            <groupFile>${enabled-groups-file}</groupFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-prefer-core-compute</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prefer</goal>
                        </goals>
                        <configuration>
                            <inputFiles>
                                <inputFile>${spec-temp-dir}/core/source/${compute-proto-file}</inputFile>
                                <inputFile>${spec-temp-dir}/core/20160918/${compute-proto-file}</inputFile>
                            </inputFiles>
                            <outputFile>${preferred-temp-dir}/${compute-proto-file}</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-preprocess-core-compute</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>preprocess</goal>
                        </goals>
                        <configuration>
                            <inputFile>${preferred-temp-dir}/${compute-proto-file}</inputFile>
                            <outputFile>${preprocessed-temp-dir}/core/${compute-proto-file}</outputFile>
                            <groupFile>${enabled-groups-file}</groupFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-prefer-core-vcn</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prefer</goal>
                        </goals>
                        <configuration>
                            <inputFiles>
                                <inputFile>${spec-temp-dir}/core/source/${vcn-proto-file}</inputFile>
                                <inputFile>${spec-temp-dir}/core/20160918/${vcn-proto-file}</inputFile>
                            </inputFiles>
                            <outputFile>${preferred-temp-dir}/${vcn-proto-file}</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-preprocess-core-vcn</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>preprocess</goal>
                        </goals>
                        <configuration>
                            <inputFile>${preferred-temp-dir}/${vcn-proto-file}</inputFile>
                            <outputFile>${preprocessed-temp-dir}/core/${vcn-proto-file}</outputFile>
                            <groupFile>${enabled-groups-file}</groupFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-prefer-identity</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prefer</goal>
                        </goals>
                        <configuration>
                            <inputFiles>
                                <inputFile>${spec-temp-dir}/identity/source/${identity-spec-file}</inputFile>
                                <inputFile>${spec-temp-dir}/identity/${identity-spec-file}</inputFile>
                            </inputFiles>
                            <outputFile>${preferred-temp-dir}/${identity-spec-file}</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-preprocess-identity</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>preprocess</goal>
                        </goals>
                        <configuration>
                            <inputFile>${preferred-temp-dir}/${identity-spec-file}</inputFile>
                            <outputFile>${preprocessed-temp-dir}/${identity-spec-file}</outputFile>
                            <groupFile>${enabled-groups-file}</groupFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-prefer-casper</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prefer</goal>
                        </goals>
                        <configuration>
                            <inputFiles>
                                <inputFile>${spec-temp-dir}/casper/source/${casper-spec-file}</inputFile>
                                <inputFile>${spec-temp-dir}/casper/${casper-spec-file}</inputFile>
                            </inputFiles>
                            <outputFile>${preferred-temp-dir}/${casper-spec-file}</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-preprocess-casper</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>preprocess</goal>
                        </goals>
                        <configuration>
                            <inputFile>${preferred-temp-dir}/${casper-spec-file}</inputFile>
                            <outputFile>${preprocessed-temp-dir}/${casper-spec-file}</outputFile>
                            <groupFile>${enabled-groups-file}</groupFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-prefer-oralb</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prefer</goal>
                        </goals>
                        <configuration>
                            <inputFiles>
                                <inputFile>${spec-temp-dir}/oralb/source/${oralb-spec-file}</inputFile>
                                <inputFile>${spec-temp-dir}/oralb/${oralb-spec-file}</inputFile>
                            </inputFiles>
                            <outputFile>${preferred-temp-dir}/${oralb-spec-file}</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-preprocess-oralb</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>preprocess</goal>
                        </goals>
                        <configuration>
                            <inputFile>${preferred-temp-dir}/${oralb-spec-file}</inputFile>
                            <outputFile>${preprocessed-temp-dir}/${oralb-spec-file}</outputFile>
                            <groupFile>${enabled-groups-file}</groupFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-prefer-dbaas</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prefer</goal>
                        </goals>
                        <configuration>
                            <inputFiles>
                                <inputFile>${spec-temp-dir}/dbaas/source/${dbaas-spec-file}</inputFile>
                                <inputFile>${spec-temp-dir}/dbaas/${dbaas-spec-file}</inputFile>
                            </inputFiles>
                            <outputFile>${preferred-temp-dir}/${dbaas-spec-file}</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-preprocess-dbaas</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>preprocess</goal>
                        </goals>
                        <configuration>
                            <inputFile>${preferred-temp-dir}/${dbaas-spec-file}</inputFile>
                            <outputFile>${preprocessed-temp-dir}/${dbaas-spec-file}</outputFile>
                            <groupFile>${enabled-groups-file}</groupFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-prefer-audit</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prefer</goal>
                        </goals>
                        <configuration>
                            <inputFiles>
                                <inputFile>${spec-temp-dir}/audit/source/${audit-spec-file}</inputFile>
                                <inputFile>${spec-temp-dir}/audit/${audit-spec-file}</inputFile>
                            </inputFiles>
                            <outputFile>${preferred-temp-dir}/${audit-spec-file}</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-preprocess-audit</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>preprocess</goal>
                        </goals>
                        <configuration>
                            <inputFile>${preferred-temp-dir}/${audit-spec-file}</inputFile>
                            <outputFile>${preprocessed-temp-dir}/${audit-spec-file}</outputFile>
                            <groupFile>${enabled-groups-file}</groupFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-prefer-dns</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prefer</goal>
                        </goals>
                        <configuration>
                            <inputFiles>
                                <inputFile>${spec-temp-dir}/dns/source/${dns-spec-file}</inputFile>
                                <inputFile>${spec-temp-dir}/dns/${dns-spec-file}</inputFile>
                            </inputFiles>
                            <outputFile>${preferred-temp-dir}/${dns-spec-file}</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-preprocess-dns</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>preprocess</goal>
                        </goals>
                        <configuration>
                            <inputFile>${preferred-temp-dir}/${dns-spec-file}</inputFile>
                            <outputFile>${preprocessed-temp-dir}/${dns-spec-file}</outputFile>
                            <groupFile>${project.basedir}/release-sdk.txt</groupFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-prefer-file_storage</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prefer</goal>
                        </goals>
                        <configuration>
                            <inputFiles>
                                <inputFile>${spec-temp-dir}/file_storage/source/${file_storage-spec-file}</inputFile>
                                <inputFile>${spec-temp-dir}/file_storage/${file_storage-spec-file}</inputFile>
                            </inputFiles>
                            <outputFile>${preferred-temp-dir}/${file_storage-spec-file}</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-preprocess-file_storage</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>preprocess</goal>
                        </goals>
                        <configuration>
                            <inputFile>${preferred-temp-dir}/${file_storage-spec-file}</inputFile>
                            <outputFile>${preprocessed-temp-dir}/${file_storage-spec-file}</outputFile>
                            <groupFile>${project.basedir}/release-sdk.txt</groupFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-prefer-email</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prefer</goal>
                        </goals>
                        <configuration>
                            <inputFiles>
                                <inputFile>${spec-temp-dir}/email/source/${email-spec-file}</inputFile>
                                <inputFile>${spec-temp-dir}/email/${email-spec-file}</inputFile>
                            </inputFiles>
                            <outputFile>${preferred-temp-dir}/${email-spec-file}</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>spec-conditionals-preprocess-email</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>preprocess</goal>
                        </goals>
                        <configuration>
                            <inputFile>${preferred-temp-dir}/${email-spec-file}</inputFile>
                            <outputFile>${preprocessed-temp-dir}/${email-spec-file}</outputFile>
                            <groupFile>${project.basedir}/release-sdk.txt</groupFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <id>generate-external-coreservices-spec</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>python</executable>
                            <workingDirectory>${spec-temp-dir}/core</workingDirectory>
                            <arguments>
                                <argument>merge_and_validate_spec.py</argument>
                                <argument>--input_directory</argument>
                                <argument>${preprocessed-temp-dir}/core</argument>
                                <argument>--output_file</argument>
                                <argument>${preprocessed-temp-dir}/${core-spec-file}</argument>
                                <argument>--external</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.oracle.bmc.sdk</groupId>
                <artifactId>bmc-sdk-swagger-maven-plugin</artifactId>
                <version>1.18-SNAPSHOT</version>
                <executions>
                    <execution>
                        <id>python-public-sdk-identity</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <language>oracle-python-sdk</language>
                            <specPath>${preprocessed-temp-dir}/${identity-spec-file}</specPath>
                            <outputDir>src/oci</outputDir>
                            <basePackage>OCI</basePackage>
                            <additionalProperties>
                                <specName>identity</specName>
                                <endpoint>https://identity.{domain}/20160918</endpoint>
                            </additionalProperties>
                            <featureIdConfigFile>${project.basedir}/featureId.yaml</featureIdConfigFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python-public-sdk-coreservices</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <language>oracle-python-sdk</language>
                            <specPath>${preprocessed-temp-dir}/${core-spec-file}</specPath>
                            <outputDir>src/oci</outputDir>
                            <basePackage>OCI</basePackage>
                            <additionalProperties>
                                <specName>core</specName>
                                <endpoint>https://iaas.{domain}/20160918</endpoint>
                            </additionalProperties>
                            <featureIdConfigFile>${project.basedir}/featureId.yaml</featureIdConfigFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python-public-sdk-casper</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <language>oracle-python-sdk</language>
                            <specPath>${preprocessed-temp-dir}/${casper-spec-file}</specPath>
                            <outputDir>src/oci</outputDir>
                            <basePackage>OCI</basePackage>
                            <additionalProperties>
                                <specName>object_storage</specName>
                                <generateInitFile>false</generateInitFile>
                                <endpoint>https://objectstorage.{domain}</endpoint>
                            </additionalProperties>
                            <featureIdConfigFile>${project.basedir}/featureId.yaml</featureIdConfigFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python-public-sdk-oralb</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <language>oracle-python-sdk</language>
                            <specPath>${preprocessed-temp-dir}/${oralb-spec-file}</specPath>
                            <outputDir>src/oci</outputDir>
                            <basePackage>OCI</basePackage>
                            <additionalProperties>
                                <specName>load_balancer</specName>
                                <generateInitFile>true</generateInitFile>
                                <endpoint>https://iaas.{domain}/20170115</endpoint>
                            </additionalProperties>
                            <featureIdConfigFile>${project.basedir}/featureId.yaml</featureIdConfigFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python-public-sdk-dbaas</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <language>oracle-python-sdk</language>
                            <specPath>${preprocessed-temp-dir}/${dbaas-spec-file}</specPath>
                            <outputDir>src/oci</outputDir>
                            <basePackage>OCI</basePackage>
                            <additionalProperties>
                                <specName>database</specName>
                                <generateInitFile>true</generateInitFile>
                                <endpoint>https://database.{domain}/20160918</endpoint>
                            </additionalProperties>
                            <featureIdConfigFile>${project.basedir}/featureId.yaml</featureIdConfigFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python-public-sdk-audit</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <language>oracle-python-sdk</language>
                            <specPath>${preprocessed-temp-dir}/${audit-spec-file}</specPath>
                            <outputDir>src/oci</outputDir>
                            <basePackage>OCI</basePackage>
                            <additionalProperties>
                                <specName>audit</specName>
                                <generateInitFile>true</generateInitFile>
                                <endpoint>https://audit.{domain}/20160918</endpoint>
                            </additionalProperties>
                            <featureIdConfigFile>${project.basedir}/featureId.yaml</featureIdConfigFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python-public-sdk-dns</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <language>oracle-python-sdk</language>
                            <specPath>${preprocessed-temp-dir}/${dns-spec-file}</specPath>
                            <outputDir>src/oci</outputDir>
                            <basePackage>OCI</basePackage>
                            <specGenerationType>PUBLIC</specGenerationType>
                            <additionalProperties>
                                <specName>dns</specName>
                                <generateInitFile>true</generateInitFile>
                                <endpoint>https://dns.{domain}/20180115</endpoint>
                            </additionalProperties>
                            <featureIdConfigFile>${project.basedir}/featureId.yaml</featureIdConfigFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python-public-sdk-file_storage</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <language>oracle-python-sdk</language>
                            <specPath>${preprocessed-temp-dir}/${file_storage-spec-file}</specPath>
                            <outputDir>src/oci</outputDir>
                            <basePackage>OCI</basePackage>
                            <specGenerationType>PUBLIC</specGenerationType>
                            <additionalProperties>
                                <specName>file_storage</specName>
                                <generateInitFile>true</generateInitFile>
                                <endpoint>https://filestorage.{domain}/20171215</endpoint>
                            </additionalProperties>
                            <featureIdConfigFile>${project.basedir}/featureId.yaml</featureIdConfigFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>python-public-sdk-email</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <language>oracle-python-sdk</language>
                            <specPath>${preprocessed-temp-dir}/${email-spec-file}</specPath>
                            <outputDir>src/oci</outputDir>
                            <basePackage>OCI</basePackage>
                            <specGenerationType>PUBLIC</specGenerationType>
                            <additionalProperties>
                                <specName>email</specName>
                                <generateInitFile>true</generateInitFile>
                                <endpoint>https://email.{domain}/20170907</endpoint>
                            </additionalProperties>
                            <featureIdConfigFile>${project.basedir}/featureId.yaml</featureIdConfigFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>python-public-sdk-common-generation</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${basedir}/scripts/generate.py</executable>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>replace_links</id>
                        <phase>compile</phase>
                        <configuration>
                            <target>
                                <replace dir="src" token="{{DOC_SERVER_URL}}" value="https://docs.us-phoenix-1.oraclecloud.com" />
                            </target>
                            <failOnError>false</failOnError>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <configuration>
                            <headerDefinitions>
                                <headerDefinition>${project.basedir}/license_header_definition.xml</headerDefinition>
                            </headerDefinitions>
                            <aggregate>true</aggregate>
                            <header>${project.basedir}/licenseheader.txt</header>
                            <includes>
                                <include>src/oci/**/*.py</include>
                                <include>tests/**/*.py</include>
                                <include>examples/*.py</include>
                                <include>scripts/wercker_validate.py</include>
                            </includes>
                            <properties>
                                <current.year>${current.year}</current.year>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/oci</directory>
                            <includes>
                                <include>*/**/*</include>
                            </includes>
                            <excludes>
                                <exclude>auth/**/*</exclude>
                                <exclude>pagination/**/*</exclude>
                                <exclude>retry/**/*</exclude>
                                <exclude>object_storage/transfer</exclude>
                                <exclude>object_storage/transfer/*</exclude>
                                <exclude>object_storage/transfer/internal/*</exclude>
                                <exclude>object_storage/__init__.py</exclude>
                            </excludes>
                        </fileset>
                        <fileset>
                            <directory>src/oci/dns</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>src/oci/file_storage</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>src/oci/email</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.oracle.pic.commons</groupId>
                <artifactId>coreservices-api-spec</artifactId>
                <version>0.1.108</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.pic.identity</groupId>
                <artifactId>identity-control-plane-api-spec</artifactId>
                <version>0.2.97</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.pic.casper</groupId>
                <artifactId>casper-api-spec</artifactId>
                <version>1.1.15</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.pic.lb</groupId>
                <artifactId>oralb-api-spec</artifactId>
                <version>1.0.15</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.pic.dbaas</groupId>
                <artifactId>dbaas-api-spec</artifactId>
                <version>0.0.135</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.pic.sherlock</groupId>
                <artifactId>hemlock-spec</artifactId>
                <version>0.1.7</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.pic.dns.pub</groupId>
                <artifactId>public-dns-api-spec</artifactId>
                <version>1.0.0-15</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.pic.ffsw</groupId>
                <artifactId>fss-api-spec</artifactId>
                <version>0.0.10</version>
            </dependency>
            <dependency>
                <groupId>com.oracle.pic.email</groupId>
                <artifactId>email-api-spec</artifactId>
                <version>1.0.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
