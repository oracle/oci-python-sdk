<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.oracle.bmc.sdk</groupId>
  <artifactId>python-sdk</artifactId>
  <version>0.2.0-SNAPSHOT</version>
  <name>Public Python SDK</name>
  <properties>
    <spec-temp-dir>${project.build.directory}/swagger</spec-temp-dir>
    <preferred-temp-dir>${project.build.directory}/preferred</preferred-temp-dir>
    <preprocessed-temp-dir>${project.build.directory}/preprocessed</preprocessed-temp-dir>
    <enabled-groups-file>${project.basedir}/release-sdk.txt</enabled-groups-file>
    <enabled-groups-dir>${project.basedir}/codegenConfig/enabledGroups</enabled-groups-dir>
    <feature-id-file>${project.basedir}/featureId.yaml</feature-id-file>
    <feature-id-dir>${project.basedir}/codegenConfig/featureIds</feature-id-dir>
    <inceptionYear>2016</inceptionYear>
    <coreservices-api-spec-spec-file>source/coreservices-api-spec-20160918.cond.yaml</coreservices-api-spec-spec-file>
    <identity-control-plane-api-spec-spec-file>source/identity-control-plane-api-spec-20160918.cond.yaml</identity-control-plane-api-spec-spec-file>
    <casper-api-spec-spec-file>source/casper-api.cond.yaml</casper-api-spec-spec-file>
    <oralb-api-spec-spec-file>source/spec-20170115.cond.yaml</oralb-api-spec-spec-file>
    <dbaas-api-spec-spec-file>source/dbaas-api-spec-20160918.cond.yaml</dbaas-api-spec-spec-file>
    <fss-api-spec-spec-file>fss-api-spec-20171215.yaml</fss-api-spec-spec-file>
    <hemlock-spec-spec-file>hemlock-api-20160918.yaml</hemlock-spec-spec-file>
    <email-api-spec-spec-file>source/email-api-spec.cond.yaml</email-api-spec-spec-file>
    <public-dns-api-spec-spec-file>source/public-dns-api-spec.cond.yaml</public-dns-api-spec-spec-file>
    <resource-query-service-spec-spec-file>rqs.yaml</resource-query-service-spec-spec-file>
    <clusters-api-spec-spec-file>clusters-api-spec.yaml</clusters-api-spec-spec-file>
    <kms-api-spec-spec-file>kms-api-spec-20180608.yaml</kms-api-spec-spec-file>
    <announcements-service-spec-spec-file>source/announcement-service.cond.yaml</announcements-service-spec-spec-file>
    <healthchecks-api-spec-spec-file>ovp-api.yaml</healthchecks-api-spec-spec-file>
    <oci-waas-api-spec-spec-file>oci-waas-api-spec.cond.yaml</oci-waas-api-spec-spec-file>
    <rest-api-spec-spec-file>api.yaml</rest-api-spec-spec-file>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.oracle.pic.commons</groupId>
      <artifactId>coreservices-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.identity</groupId>
      <artifactId>identity-control-plane-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.casper</groupId>
      <artifactId>casper-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.lb</groupId>
      <artifactId>oralb-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dbaas</groupId>
      <artifactId>dbaas-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.ffsw</groupId>
      <artifactId>fss-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.sherlock</groupId>
      <artifactId>hemlock-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.email</groupId>
      <artifactId>email-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dns.pub</groupId>
      <artifactId>public-dns-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.query</groupId>
      <artifactId>resource-query-service-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.clusters</groupId>
      <artifactId>clusters-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.kms</groupId>
      <artifactId>kms-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.announcements</groupId>
      <artifactId>announcements-service-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci</groupId>
      <artifactId>healthchecks-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.waas</groupId>
      <artifactId>oci-waas-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.oss</groupId>
      <artifactId>rest-api-spec</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>timestamp-property</id>
            <goals>
              <goal>timestamp-property</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <name>current.year</name>
              <pattern>yyyy</pattern>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <id>unpack-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.commons</groupId>
                  <artifactId>coreservices-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/coreservices-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-identity-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.identity</groupId>
                  <artifactId>identity-control-plane-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/identity-control-plane-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.casper</groupId>
                  <artifactId>casper-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/casper-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.lb</groupId>
                  <artifactId>oralb-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oralb-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dbaas</groupId>
                  <artifactId>dbaas-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dbaas-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ffsw</groupId>
                  <artifactId>fss-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/fss-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.sherlock</groupId>
                  <artifactId>hemlock-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/hemlock-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.email</groupId>
                  <artifactId>email-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/email-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dns.pub</groupId>
                  <artifactId>public-dns-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/public-dns-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.query</groupId>
                  <artifactId>resource-query-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/resource-query-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.clusters</groupId>
                  <artifactId>clusters-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/clusters-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.kms</groupId>
                  <artifactId>kms-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/kms-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.announcements</groupId>
                  <artifactId>announcements-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/announcements-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci</groupId>
                  <artifactId>healthchecks-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/healthchecks-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.waas</groupId>
                  <artifactId>oci-waas-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oci-waas-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.oss</groupId>
                  <artifactId>rest-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/rest-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.oci.sdk.utilities</groupId>
        <artifactId>spec-conditionals-preprocessor-plugin</artifactId>
        <version>1.0.6-SNAPSHOT</version>
        <executions>
          <execution>
            <id>spec-conditionals-prefer-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/coreservices-api-spec/source/${coreservices-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-identity-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/identity-control-plane-api-spec/source/${identity-control-plane-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-identity-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/casper-api-spec/source/${casper-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oralb-api-spec/source/${oralb-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dbaas-api-spec/source/${dbaas-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/fss-api-spec/source/${fss-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/hemlock-spec/source/${hemlock-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/email-api-spec/source/${email-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/email-api-spec/${email-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/email-api-spec/${email-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/email-api-spec/${email-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/email-api-spec/${email-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/public-dns-api-spec/source/${public-dns-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/resource-query-service-spec/source/${resource-query-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/clusters-api-spec/source/${clusters-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/kms-api-spec/source/${kms-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/announcements-service-spec/source/${announcements-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/healthchecks-api-spec/source/${healthchecks-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oci-waas-api-spec/source/${oci-waas-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/rest-api-spec/source/${rest-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.bmc.sdk</groupId>
        <artifactId>bmc-sdk-swagger-maven-plugin</artifactId>
        <version>1.62-SNAPSHOT</version>
        <configuration>
          <isTestGenerationEnabled>false</isTestGenerationEnabled>
        </configuration>
        <executions>
          <execution>
            <id>python-public-sdk-identity-control-plane-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>identity</specName>
                <endpoint>https://identity.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-coreservices-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>core</specName>
                <endpoint>https://iaas.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-casper-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>object_storage</specName>
                <generateInitFile>false</generateInitFile>
                <endpoint>https://objectstorage.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-oralb-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>load_balancer</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://iaas.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-dbaas-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>database</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://database.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-fss-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>file_storage</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://filestorage.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-hemlock-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>audit</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://audit.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-email-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/email-api-spec/${email-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>email</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://email.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-public-dns-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>dns</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://dns.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-resource-query-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>resource_search</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://query.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-clusters-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>container_engine</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://containerengine.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-kms-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>key_management</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://kms.{domain}</endpoint>
                <isRegionalClient.kms_crypto>false</isRegionalClient.kms_crypto>
                <isRegionalClient.kms_management>false</isRegionalClient.kms_management>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-announcements-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>announcements_service</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://announcements.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-oci-waas-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>waas</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://waas.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-healthchecks-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>healthchecks</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://healthchecks.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-rest-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-python-sdk</language>
              <specPath>${preprocessed-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</specPath>
              <outputDir>src/oci</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>PUBLIC</specGenerationType>
              <additionalProperties>
                <specName>streaming</specName>
                <generateInitFile>true</generateInitFile>
                <endpoint>https://streams.{domain}</endpoint>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>python-public-sdk-common-generation</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${basedir}/scripts/generate.py</executable>
            </configuration>
          </execution>
          <execution>
            <id>python-public-sdk-strip-whitespace</id>
            <phase>package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${basedir}/scripts/strip_trailing_whitespace.py</executable>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>replace_links</id>
            <phase>compile</phase>
            <configuration>
              <target>
                <replace dir="src" token="{{DOC_SERVER_URL}}" value="https://docs.us-phoenix-1.oraclecloud.com" />
              </target>
              <failOnError>false</failOnError>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>3.0</version>
        <executions>
          <execution>
            <id>oci-src-no-vendor</id>
            <phase>compile</phase>
            <goals>
              <goal>format</goal>
            </goals>
            <configuration>
              <headerDefinitions>
                <headerDefinition>${project.basedir}/license_header_definition.xml</headerDefinition>
              </headerDefinitions>
              <header>${project.basedir}/licenseheader.txt</header>
              <includes>
                <include>src/oci/**/*.py</include>
                <include>tests/**/*.py</include>
                <include>examples/*.py</include>
                <include>scripts/wercker_validate.py</include>
              </includes>
              <excludes>
                <exclude>src/oci/_vendor/**/*.py</exclude>
              </excludes>
              <properties>
                <current.year>${current.year}</current.year>
              </properties>
            </configuration>
          </execution>
          <execution>
            <id>oci-src-vendor-chardet</id>
            <phase>compile</phase>
            <goals>
              <goal>format</goal>
            </goals>
            <configuration>
              <headerDefinitions>
                <headerDefinition>${project.basedir}/license_header_definition.xml</headerDefinition>
              </headerDefinitions>
              <header>${project.basedir}/licenseheader_chardet.txt</header>
              <includes>
                <include>src/oci/_vendor/chardet/**/*.py</include>
              </includes>
              <properties>
                <current.year>${current.year}</current.year>
              </properties>
            </configuration>
          </execution>
          <execution>
            <id>oci-src-vendor-httpsig</id>
            <phase>compile</phase>
            <goals>
              <goal>format</goal>
            </goals>
            <configuration>
              <headerDefinitions>
                <headerDefinition>${project.basedir}/license_header_definition.xml</headerDefinition>
              </headerDefinitions>
              <header>${project.basedir}/licenseheader_httpsig_cffi.txt</header>
              <includes>
                <include>src/oci/_vendor/httpsig_cffi/*.py</include>
              </includes>
              <properties>
                <current.year>${current.year}</current.year>
              </properties>
            </configuration>
          </execution>
          <execution>
            <id>oci-src-vendor-idna</id>
            <phase>compile</phase>
            <goals>
              <goal>format</goal>
            </goals>
            <configuration>
              <headerDefinitions>
                <headerDefinition>${project.basedir}/license_header_definition.xml</headerDefinition>
              </headerDefinitions>
              <header>${project.basedir}/licenseheader_idna.txt</header>
              <includes>
                <include>src/oci/_vendor/idna/**/*.py</include>
              </includes>
              <properties>
                <current.year>${current.year}</current.year>
              </properties>
            </configuration>
          </execution>
          <execution>
            <id>oci-src-vendor-pyjwt</id>
            <phase>compile</phase>
            <goals>
              <goal>format</goal>
            </goals>
            <configuration>
              <headerDefinitions>
                <headerDefinition>${project.basedir}/license_header_definition.xml</headerDefinition>
              </headerDefinitions>
              <header>${project.basedir}/licenseheader_pyjwt.txt</header>
              <includes>
                <include>src/oci/_vendor/jwt/*.py</include>
              </includes>
              <properties>
                <current.year>${current.year}</current.year>
              </properties>
            </configuration>
          </execution>
          <execution>
            <id>oci-src-vendor-requests</id>
            <phase>compile</phase>
            <goals>
              <goal>format</goal>
            </goals>
            <configuration>
              <headerDefinitions>
                <headerDefinition>${project.basedir}/license_header_definition.xml</headerDefinition>
              </headerDefinitions>
              <header>${project.basedir}/licenseheader_requests.txt</header>
              <includes>
                <include>src/oci/_vendor/requests/**/*.py</include>
              </includes>
              <properties>
                <current.year>${current.year}</current.year>
              </properties>
            </configuration>
          </execution>
          <execution>
            <id>oci-src-vendor-urllib3</id>
            <phase>compile</phase>
            <goals>
              <goal>format</goal>
            </goals>
            <configuration>
              <headerDefinitions>
                <headerDefinition>${project.basedir}/license_header_definition.xml</headerDefinition>
              </headerDefinitions>
              <header>${project.basedir}/licenseheader_urllib3.txt</header>
              <includes>
                <include>src/oci/_vendor/urllib3/**/*.py</include>
              </includes>
              <properties>
                <current.year>${current.year}</current.year>
              </properties>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>src/oci</directory>
              <includes>
                <include>*/**/*</include>
              </includes>
              <excludes>
                <exclude>_vendor/**/*</exclude>
                <exclude>auth/**/*</exclude>
                <exclude>pagination/**/*</exclude>
                <exclude>retry/**/*</exclude>
                <exclude>service_helpers/__init__.py</exclude>
                <exclude>service_helpers/*.py</exclude>
                <exclude>service_helpers/internal/__init__.py</exclude>
                <exclude>object_storage/transfer</exclude>
                <exclude>object_storage/transfer/*</exclude>
                <exclude>object_storage/transfer/internal/*</exclude>
                <exclude>object_storage/__init__.py</exclude>
              </excludes>
            </fileset>
            <fileset>
              <directory>src/oci/resource_search</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>src/oci/container_engine</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>src/oci/key_management</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>src/oci/announcements_service</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>src/oci/healthchecks</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>src/oci/waas</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>src/oci/streaming</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.oracle.pic.commons</groupId>
        <artifactId>coreservices-api-spec</artifactId>
        <version>0.2.344</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.identity</groupId>
        <artifactId>identity-control-plane-api-spec</artifactId>
        <version>0.4.15</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.casper</groupId>
        <artifactId>casper-api-spec</artifactId>
        <version>1.1.47-20181011.180124-1</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.lb</groupId>
        <artifactId>oralb-api-spec</artifactId>
        <version>2.0.2</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dbaas</groupId>
        <artifactId>dbaas-api-spec</artifactId>
        <version>0.1.71</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.sherlock</groupId>
        <artifactId>hemlock-spec</artifactId>
        <version>0.1.9</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dns.pub</groupId>
        <artifactId>public-dns-api-spec</artifactId>
        <version>2.0.14</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ffsw</groupId>
        <artifactId>fss-api-spec</artifactId>
        <version>0.0.14</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.email</groupId>
        <artifactId>email-api-spec</artifactId>
        <version>1.0.3</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.clusters</groupId>
        <artifactId>clusters-api-spec</artifactId>
        <version>1.0.11</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.query</groupId>
        <artifactId>resource-query-service-spec</artifactId>
        <version>0.0.8</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.kms</groupId>
        <artifactId>kms-api-spec</artifactId>
        <version>0.1.75</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.announcements</groupId>
        <artifactId>announcements-service-spec</artifactId>
        <version>1.0.9</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci</groupId>
        <artifactId>healthchecks-api-spec</artifactId>
        <version>0.0.1-20181210.154927-6</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.waas</groupId>
        <artifactId>oci-waas-api-spec</artifactId>
        <version>1.0.410</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.oss</groupId>
        <artifactId>rest-api-spec</artifactId>
        <version>0.1.250</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>