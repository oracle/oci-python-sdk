# coding: utf-8
# Copyright (c) 2016, 2023, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.

# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: 20220901


from oci.util import formatted_flat_dict, NONE_SENTINEL, value_allowed_none_or_none_sentinel  # noqa: F401
from oci.decorators import init_model_state_from_kwargs


@init_model_state_from_kwargs
class CreateListingRevisionNoteDetails(object):
    """
    The model for an Oracle Cloud Infrastructure Marketplace Publisher listing revision note.
    """

    def __init__(self, **kwargs):
        """
        Initializes a new CreateListingRevisionNoteDetails object with values from keyword arguments.
        The following keyword arguments are supported (corresponding to the getters/setters of this class):

        :param listing_revision_id:
            The value to assign to the listing_revision_id property of this CreateListingRevisionNoteDetails.
        :type listing_revision_id: str

        :param note_details:
            The value to assign to the note_details property of this CreateListingRevisionNoteDetails.
        :type note_details: str

        :param freeform_tags:
            The value to assign to the freeform_tags property of this CreateListingRevisionNoteDetails.
        :type freeform_tags: dict(str, str)

        :param defined_tags:
            The value to assign to the defined_tags property of this CreateListingRevisionNoteDetails.
        :type defined_tags: dict(str, dict(str, object))

        """
        self.swagger_types = {
            'listing_revision_id': 'str',
            'note_details': 'str',
            'freeform_tags': 'dict(str, str)',
            'defined_tags': 'dict(str, dict(str, object))'
        }

        self.attribute_map = {
            'listing_revision_id': 'listingRevisionId',
            'note_details': 'noteDetails',
            'freeform_tags': 'freeformTags',
            'defined_tags': 'definedTags'
        }

        self._listing_revision_id = None
        self._note_details = None
        self._freeform_tags = None
        self._defined_tags = None

    @property
    def listing_revision_id(self):
        """
        **[Required]** Gets the listing_revision_id of this CreateListingRevisionNoteDetails.
        The unique identifier of the listing revision that the specified note belongs to.


        :return: The listing_revision_id of this CreateListingRevisionNoteDetails.
        :rtype: str
        """
        return self._listing_revision_id

    @listing_revision_id.setter
    def listing_revision_id(self, listing_revision_id):
        """
        Sets the listing_revision_id of this CreateListingRevisionNoteDetails.
        The unique identifier of the listing revision that the specified note belongs to.


        :param listing_revision_id: The listing_revision_id of this CreateListingRevisionNoteDetails.
        :type: str
        """
        self._listing_revision_id = listing_revision_id

    @property
    def note_details(self):
        """
        **[Required]** Gets the note_details of this CreateListingRevisionNoteDetails.
        Notes provided for the listing revision.


        :return: The note_details of this CreateListingRevisionNoteDetails.
        :rtype: str
        """
        return self._note_details

    @note_details.setter
    def note_details(self, note_details):
        """
        Sets the note_details of this CreateListingRevisionNoteDetails.
        Notes provided for the listing revision.


        :param note_details: The note_details of this CreateListingRevisionNoteDetails.
        :type: str
        """
        self._note_details = note_details

    @property
    def freeform_tags(self):
        """
        Gets the freeform_tags of this CreateListingRevisionNoteDetails.
        Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        Example: `{\"bar-key\": \"value\"}`


        :return: The freeform_tags of this CreateListingRevisionNoteDetails.
        :rtype: dict(str, str)
        """
        return self._freeform_tags

    @freeform_tags.setter
    def freeform_tags(self, freeform_tags):
        """
        Sets the freeform_tags of this CreateListingRevisionNoteDetails.
        Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        Example: `{\"bar-key\": \"value\"}`


        :param freeform_tags: The freeform_tags of this CreateListingRevisionNoteDetails.
        :type: dict(str, str)
        """
        self._freeform_tags = freeform_tags

    @property
    def defined_tags(self):
        """
        Gets the defined_tags of this CreateListingRevisionNoteDetails.
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`


        :return: The defined_tags of this CreateListingRevisionNoteDetails.
        :rtype: dict(str, dict(str, object))
        """
        return self._defined_tags

    @defined_tags.setter
    def defined_tags(self, defined_tags):
        """
        Sets the defined_tags of this CreateListingRevisionNoteDetails.
        Defined tags for this resource. Each key is predefined and scoped to a namespace.
        Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`


        :param defined_tags: The defined_tags of this CreateListingRevisionNoteDetails.
        :type: dict(str, dict(str, object))
        """
        self._defined_tags = defined_tags

    def __repr__(self):
        return formatted_flat_dict(self)

    def __eq__(self, other):
        if other is None:
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        return not self == other
