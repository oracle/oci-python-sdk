# coding: utf-8
# Copyright (c) 2016, 2022, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.


from oci.util import formatted_flat_dict, NONE_SENTINEL, value_allowed_none_or_none_sentinel  # noqa: F401
from oci.decorators import init_model_state_from_kwargs


@init_model_state_from_kwargs
class HostCisBenchmarkScanResult(object):
    """
    A scan result of all CIS (Center for Internet Security) benchmark execution for this host
    """

    #: A constant which can be used with the lifecycle_state property of a HostCisBenchmarkScanResult.
    #: This constant has a value of "CREATING"
    LIFECYCLE_STATE_CREATING = "CREATING"

    #: A constant which can be used with the lifecycle_state property of a HostCisBenchmarkScanResult.
    #: This constant has a value of "UPDATING"
    LIFECYCLE_STATE_UPDATING = "UPDATING"

    #: A constant which can be used with the lifecycle_state property of a HostCisBenchmarkScanResult.
    #: This constant has a value of "ACTIVE"
    LIFECYCLE_STATE_ACTIVE = "ACTIVE"

    #: A constant which can be used with the lifecycle_state property of a HostCisBenchmarkScanResult.
    #: This constant has a value of "DELETING"
    LIFECYCLE_STATE_DELETING = "DELETING"

    #: A constant which can be used with the lifecycle_state property of a HostCisBenchmarkScanResult.
    #: This constant has a value of "DELETED"
    LIFECYCLE_STATE_DELETED = "DELETED"

    #: A constant which can be used with the lifecycle_state property of a HostCisBenchmarkScanResult.
    #: This constant has a value of "FAILED"
    LIFECYCLE_STATE_FAILED = "FAILED"

    def __init__(self, **kwargs):
        """
        Initializes a new HostCisBenchmarkScanResult object with values from keyword arguments.
        The following keyword arguments are supported (corresponding to the getters/setters of this class):

        :param id:
            The value to assign to the id property of this HostCisBenchmarkScanResult.
        :type id: str

        :param display_name:
            The value to assign to the display_name property of this HostCisBenchmarkScanResult.
        :type display_name: str

        :param instance_id:
            The value to assign to the instance_id property of this HostCisBenchmarkScanResult.
        :type instance_id: str

        :param compartment_id:
            The value to assign to the compartment_id property of this HostCisBenchmarkScanResult.
        :type compartment_id: str

        :param time_started:
            The value to assign to the time_started property of this HostCisBenchmarkScanResult.
        :type time_started: datetime

        :param time_finished:
            The value to assign to the time_finished property of this HostCisBenchmarkScanResult.
        :type time_finished: datetime

        :param cis_benchmark_scan_issues_count:
            The value to assign to the cis_benchmark_scan_issues_count property of this HostCisBenchmarkScanResult.
        :type cis_benchmark_scan_issues_count: int

        :param cis_benchmark_scan_result_scores:
            The value to assign to the cis_benchmark_scan_result_scores property of this HostCisBenchmarkScanResult.
        :type cis_benchmark_scan_result_scores: list[oci.vulnerability_scanning.models.HostCisBenchmarkScanResultScore]

        :param lifecycle_state:
            The value to assign to the lifecycle_state property of this HostCisBenchmarkScanResult.
            Allowed values for this property are: "CREATING", "UPDATING", "ACTIVE", "DELETING", "DELETED", "FAILED", 'UNKNOWN_ENUM_VALUE'.
            Any unrecognized values returned by a service will be mapped to 'UNKNOWN_ENUM_VALUE'.
        :type lifecycle_state: str

        """
        self.swagger_types = {
            'id': 'str',
            'display_name': 'str',
            'instance_id': 'str',
            'compartment_id': 'str',
            'time_started': 'datetime',
            'time_finished': 'datetime',
            'cis_benchmark_scan_issues_count': 'int',
            'cis_benchmark_scan_result_scores': 'list[HostCisBenchmarkScanResultScore]',
            'lifecycle_state': 'str'
        }

        self.attribute_map = {
            'id': 'id',
            'display_name': 'displayName',
            'instance_id': 'instanceId',
            'compartment_id': 'compartmentId',
            'time_started': 'timeStarted',
            'time_finished': 'timeFinished',
            'cis_benchmark_scan_issues_count': 'cisBenchmarkScanIssuesCount',
            'cis_benchmark_scan_result_scores': 'cisBenchmarkScanResultScores',
            'lifecycle_state': 'lifecycleState'
        }

        self._id = None
        self._display_name = None
        self._instance_id = None
        self._compartment_id = None
        self._time_started = None
        self._time_finished = None
        self._cis_benchmark_scan_issues_count = None
        self._cis_benchmark_scan_result_scores = None
        self._lifecycle_state = None

    @property
    def id(self):
        """
        **[Required]** Gets the id of this HostCisBenchmarkScanResult.
        Unique identifier of the scan


        :return: The id of this HostCisBenchmarkScanResult.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this HostCisBenchmarkScanResult.
        Unique identifier of the scan


        :param id: The id of this HostCisBenchmarkScanResult.
        :type: str
        """
        self._id = id

    @property
    def display_name(self):
        """
        Gets the display_name of this HostCisBenchmarkScanResult.
        Name of the result


        :return: The display_name of this HostCisBenchmarkScanResult.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """
        Sets the display_name of this HostCisBenchmarkScanResult.
        Name of the result


        :param display_name: The display_name of this HostCisBenchmarkScanResult.
        :type: str
        """
        self._display_name = display_name

    @property
    def instance_id(self):
        """
        **[Required]** Gets the instance_id of this HostCisBenchmarkScanResult.
        Instance ID of the Compute Instance scanned


        :return: The instance_id of this HostCisBenchmarkScanResult.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """
        Sets the instance_id of this HostCisBenchmarkScanResult.
        Instance ID of the Compute Instance scanned


        :param instance_id: The instance_id of this HostCisBenchmarkScanResult.
        :type: str
        """
        self._instance_id = instance_id

    @property
    def compartment_id(self):
        """
        **[Required]** Gets the compartment_id of this HostCisBenchmarkScanResult.
        Compartment ID of the resource. This is set to the same as the compartment ID of the scan target


        :return: The compartment_id of this HostCisBenchmarkScanResult.
        :rtype: str
        """
        return self._compartment_id

    @compartment_id.setter
    def compartment_id(self, compartment_id):
        """
        Sets the compartment_id of this HostCisBenchmarkScanResult.
        Compartment ID of the resource. This is set to the same as the compartment ID of the scan target


        :param compartment_id: The compartment_id of this HostCisBenchmarkScanResult.
        :type: str
        """
        self._compartment_id = compartment_id

    @property
    def time_started(self):
        """
        **[Required]** Gets the time_started of this HostCisBenchmarkScanResult.
        Date and time the scan was started, as described in `RFC 3339`__

        __ https://tools.ietf.org/rfc/rfc3339


        :return: The time_started of this HostCisBenchmarkScanResult.
        :rtype: datetime
        """
        return self._time_started

    @time_started.setter
    def time_started(self, time_started):
        """
        Sets the time_started of this HostCisBenchmarkScanResult.
        Date and time the scan was started, as described in `RFC 3339`__

        __ https://tools.ietf.org/rfc/rfc3339


        :param time_started: The time_started of this HostCisBenchmarkScanResult.
        :type: datetime
        """
        self._time_started = time_started

    @property
    def time_finished(self):
        """
        **[Required]** Gets the time_finished of this HostCisBenchmarkScanResult.
        Date and time the scan was completed, as described in `RFC 3339`__

        __ https://tools.ietf.org/rfc/rfc3339


        :return: The time_finished of this HostCisBenchmarkScanResult.
        :rtype: datetime
        """
        return self._time_finished

    @time_finished.setter
    def time_finished(self, time_finished):
        """
        Sets the time_finished of this HostCisBenchmarkScanResult.
        Date and time the scan was completed, as described in `RFC 3339`__

        __ https://tools.ietf.org/rfc/rfc3339


        :param time_finished: The time_finished of this HostCisBenchmarkScanResult.
        :type: datetime
        """
        self._time_finished = time_finished

    @property
    def cis_benchmark_scan_issues_count(self):
        """
        **[Required]** Gets the cis_benchmark_scan_issues_count of this HostCisBenchmarkScanResult.
        Total number of CIS (Center for Internet Security) benchmark issues found in this scan


        :return: The cis_benchmark_scan_issues_count of this HostCisBenchmarkScanResult.
        :rtype: int
        """
        return self._cis_benchmark_scan_issues_count

    @cis_benchmark_scan_issues_count.setter
    def cis_benchmark_scan_issues_count(self, cis_benchmark_scan_issues_count):
        """
        Sets the cis_benchmark_scan_issues_count of this HostCisBenchmarkScanResult.
        Total number of CIS (Center for Internet Security) benchmark issues found in this scan


        :param cis_benchmark_scan_issues_count: The cis_benchmark_scan_issues_count of this HostCisBenchmarkScanResult.
        :type: int
        """
        self._cis_benchmark_scan_issues_count = cis_benchmark_scan_issues_count

    @property
    def cis_benchmark_scan_result_scores(self):
        """
        **[Required]** Gets the cis_benchmark_scan_result_scores of this HostCisBenchmarkScanResult.
        A single CIS (Center for Internet Security) benchmark scan executed on a host.


        :return: The cis_benchmark_scan_result_scores of this HostCisBenchmarkScanResult.
        :rtype: list[oci.vulnerability_scanning.models.HostCisBenchmarkScanResultScore]
        """
        return self._cis_benchmark_scan_result_scores

    @cis_benchmark_scan_result_scores.setter
    def cis_benchmark_scan_result_scores(self, cis_benchmark_scan_result_scores):
        """
        Sets the cis_benchmark_scan_result_scores of this HostCisBenchmarkScanResult.
        A single CIS (Center for Internet Security) benchmark scan executed on a host.


        :param cis_benchmark_scan_result_scores: The cis_benchmark_scan_result_scores of this HostCisBenchmarkScanResult.
        :type: list[oci.vulnerability_scanning.models.HostCisBenchmarkScanResultScore]
        """
        self._cis_benchmark_scan_result_scores = cis_benchmark_scan_result_scores

    @property
    def lifecycle_state(self):
        """
        Gets the lifecycle_state of this HostCisBenchmarkScanResult.
        The current state of the result.

        Allowed values for this property are: "CREATING", "UPDATING", "ACTIVE", "DELETING", "DELETED", "FAILED", 'UNKNOWN_ENUM_VALUE'.
        Any unrecognized values returned by a service will be mapped to 'UNKNOWN_ENUM_VALUE'.


        :return: The lifecycle_state of this HostCisBenchmarkScanResult.
        :rtype: str
        """
        return self._lifecycle_state

    @lifecycle_state.setter
    def lifecycle_state(self, lifecycle_state):
        """
        Sets the lifecycle_state of this HostCisBenchmarkScanResult.
        The current state of the result.


        :param lifecycle_state: The lifecycle_state of this HostCisBenchmarkScanResult.
        :type: str
        """
        allowed_values = ["CREATING", "UPDATING", "ACTIVE", "DELETING", "DELETED", "FAILED"]
        if not value_allowed_none_or_none_sentinel(lifecycle_state, allowed_values):
            lifecycle_state = 'UNKNOWN_ENUM_VALUE'
        self._lifecycle_state = lifecycle_state

    def __repr__(self):
        return formatted_flat_dict(self)

    def __eq__(self, other):
        if other is None:
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        return not self == other
