# coding: utf-8
# Copyright (c) 2016, 2022, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.


from oci.util import formatted_flat_dict, NONE_SENTINEL, value_allowed_none_or_none_sentinel  # noqa: F401
from oci.decorators import init_model_state_from_kwargs


@init_model_state_from_kwargs
class HostScanAgentSettings(object):
    """
    Agent scan settings for a host scan
    """

    #: A constant which can be used with the scan_level property of a HostScanAgentSettings.
    #: This constant has a value of "NONE"
    SCAN_LEVEL_NONE = "NONE"

    #: A constant which can be used with the scan_level property of a HostScanAgentSettings.
    #: This constant has a value of "STANDARD"
    SCAN_LEVEL_STANDARD = "STANDARD"

    def __init__(self, **kwargs):
        """
        Initializes a new HostScanAgentSettings object with values from keyword arguments.
        The following keyword arguments are supported (corresponding to the getters/setters of this class):

        :param scan_level:
            The value to assign to the scan_level property of this HostScanAgentSettings.
            Allowed values for this property are: "NONE", "STANDARD", 'UNKNOWN_ENUM_VALUE'.
            Any unrecognized values returned by a service will be mapped to 'UNKNOWN_ENUM_VALUE'.
        :type scan_level: str

        :param agent_configuration:
            The value to assign to the agent_configuration property of this HostScanAgentSettings.
        :type agent_configuration: oci.vulnerability_scanning.models.HostScanAgentConfiguration

        """
        self.swagger_types = {
            'scan_level': 'str',
            'agent_configuration': 'HostScanAgentConfiguration'
        }

        self.attribute_map = {
            'scan_level': 'scanLevel',
            'agent_configuration': 'agentConfiguration'
        }

        self._scan_level = None
        self._agent_configuration = None

    @property
    def scan_level(self):
        """
        **[Required]** Gets the scan_level of this HostScanAgentSettings.
        The scan level

        Allowed values for this property are: "NONE", "STANDARD", 'UNKNOWN_ENUM_VALUE'.
        Any unrecognized values returned by a service will be mapped to 'UNKNOWN_ENUM_VALUE'.


        :return: The scan_level of this HostScanAgentSettings.
        :rtype: str
        """
        return self._scan_level

    @scan_level.setter
    def scan_level(self, scan_level):
        """
        Sets the scan_level of this HostScanAgentSettings.
        The scan level


        :param scan_level: The scan_level of this HostScanAgentSettings.
        :type: str
        """
        allowed_values = ["NONE", "STANDARD"]
        if not value_allowed_none_or_none_sentinel(scan_level, allowed_values):
            scan_level = 'UNKNOWN_ENUM_VALUE'
        self._scan_level = scan_level

    @property
    def agent_configuration(self):
        """
        Gets the agent_configuration of this HostScanAgentSettings.

        :return: The agent_configuration of this HostScanAgentSettings.
        :rtype: oci.vulnerability_scanning.models.HostScanAgentConfiguration
        """
        return self._agent_configuration

    @agent_configuration.setter
    def agent_configuration(self, agent_configuration):
        """
        Sets the agent_configuration of this HostScanAgentSettings.

        :param agent_configuration: The agent_configuration of this HostScanAgentSettings.
        :type: oci.vulnerability_scanning.models.HostScanAgentConfiguration
        """
        self._agent_configuration = agent_configuration

    def __repr__(self):
        return formatted_flat_dict(self)

    def __eq__(self, other):
        if other is None:
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        return not self == other
