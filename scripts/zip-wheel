#!/usr/bin/env python

import oci
import os
import shutil
here = os.path.abspath(os.path.dirname(__file__))
dist = os.path.join(here, "..", "dist")
# The name of the folder that the zip unpacks into
zip_folder = "oci-python-sdk"
# The name of the zip file itself
zip_name = "oci-python-sdk-{v}".format(v=oci.__version__)


def copy(*src_path):
    # copies foo/../file.txt to dist/zip_filder/file.txt
    src = os.path.join(here, *src_path)
    dst = os.path.join(dist, zip_folder, src_path[-1])
    if os.path.isdir(src):
        shutil.copytree(src, dst)
    else:
        shutil.copy(src, dst)

# 0. clean out stale artifacts, rebuild dst folder
# (no error handling, dist/ must already exist to have a .whl file
shutil.rmtree(os.path.join(dist, zip_folder), ignore_errors=True)
os.mkdir(os.path.join(dist, zip_folder))

# 1. copy files
copy("..", "LICENSE.txt")
copy("..", "CHANGELOG.rst")
copy("..", "examples")
copy("..", "dist", "oci-{v}-py2.py3-none-any.whl".format(v=oci.__version__))

# 2. zip target folder so that unzipping doesn't dump artifacts in CWD
shutil.make_archive(
    base_name=os.path.join(dist, zip_name),
    format="zip",
    root_dir=os.path.join(dist),
    base_dir=zip_folder
)

# 3. clean up intermediate zip staging
shutil.rmtree(os.path.join(dist, zip_folder), ignore_errors=True)
